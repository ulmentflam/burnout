[project]
name = "burnout"
version = "0.1.0"
description = "Pytest framework for testing PyTorch models against MAX graphs"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "modular",
    "pytest>=7.0.0",
    "torch>=2.6.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Build configuration
[tool.hatch.build.targets.wheel]
packages = ["."]

# Black configuration
[tool.black]
include = '\.pyi?$'
line-length = 88
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | build
  | dist
  | node_modules
  | __pycache__
  | \.pytest_cache
  | \.coverage
  | htmlcov
  | \.mypy_cache
  | \.ruff_cache
  | \.cache
  | \.DS_Store
  | \.idea
  | \.vscode
  | \.ipynb_checkpoints
  | jupyter_execute
  | docs/_build
  | site
  | migrations
  | staticfiles
  | media
  | logs
  | tmp
  | temp
  | uploads
  | downloads
  | data
  | datasets
  | models
  | checkpoints
  | weights
  | outputs
  | results
  | experiments
  | runs
  | wandb
  | mlruns
  | tensorboard_logs
  | lightning_logs
  | .*_cache
  | .*_logs
  | .*_output
  | .*_results
  | .*_temp
  | .*_tmp
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py313"
line-length = 88
include = ["*.py"]
exclude = [
    # directories
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    ".env",
    "build",
    "dist",
    "node_modules",
    "__pycache__",
    ".pytest_cache",
    ".coverage",
    "htmlcov",
    ".mypy_cache",
    ".ruff_cache",
    ".cache",
    ".DS_Store",
    ".idea",
    ".vscode",
    ".ipynb_checkpoints",
    "jupyter_execute",
    "docs/_build",
    "site",
    "migrations",
    "staticfiles",
    "media",
    "logs",
    "tmp",
    "temp",
    "uploads",
    "downloads",
    "data",
    "datasets",
    "models",
    "checkpoints",
    "weights",
    "outputs",
    "results",
    "experiments",
    "runs",
    "wandb",
    "mlruns",
    "tensorboard_logs",
    "lightning_logs",
    # files
    "*.ipynb",
    "*.mojo",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    "*.so",
    "*.dll",
    "*.dylib",
    "*.egg",
    "*.egg-info",
    "*.whl",
    "*.tar.gz",
    "*.zip",
    "*.rar",
    "*.7z",
    "*.bz2",
    "*.gz",
    "*.xz",
    "*.lzma",
    "*.sqlite",
    "*.db",
    "*.sql",
    "*.json",
    "*.yaml",
    "*.yml",
    "*.toml",
    "*.ini",
    "*.cfg",
    "*.conf",
    "*.log",
    "*.txt",
    "*.md",
    "*.rst",
    "*.html",
    "*.css",
    "*.js",
    "*.ts",
    "*.jsx",
    "*.tsx",
    "*.vue",
    "*.svelte",
    "*.rs",
    "*.cpp",
    "*.c",
    "*.h",
    "*.hpp",
    "*.cc",
    "*.cxx",
    "*.cu",
    "*.cuh",
    "*.f90",
    "*.f95",
    "*.f03",
    "*.f08",
    "*.java",
    "*.kt",
    "*.scala",
    "*.go",
    "*.rb",
    "*.php",
    "*.pl",
    "*.pm",
    "*.sh",
    "*.bash",
    "*.zsh",
    "*.fish",
    "*.ps1",
    "*.bat",
    "*.cmd",
    "*.exe",
    "*.bin",
    "*.out",
    "*.app",
    "*.dmg",
    "*.pkg",
    "*.deb",
    "*.rpm",
    "*.msi",
    "*.exe",
    "*.dll",
    "*.so",
    "*.dylib",
    "*.a",
    "*.lib",
    "*.o",
    "*.obj",
    "*.class",
    "*.jar",
    "*.war",
    "*.ear",
    "*.apk",
    "*.ipa",
    "*.xcodeproj",
    "*.xcworkspace",
    "*.pbxproj",
    "*.plist",
    "*.entitlements",
    "*.storyboard",
    "*.xib",
    "*.nib",
    "*.strings",
    "*.stringsdict",
    "*.lproj",
    "*.bundle",
    "*.framework",
    "*.app",
    "*.ipa",
    "*.apk",
    "*.aab",
    "*.keystore",
    "*.jks",
    "*.p12",
    "*.pfx",
    "*.crt",
    "*.pem",
    "*.key",
    "*.csr",
    "*.srl",
    "*.p7b",
    "*.p7c",
    "*.p7m",
    "*.p7s",
    "*.p8",
    "*.p8e",
    "*.p8s",
    "*.p8t",
    "*.p8u",
    "*.p8v",
    "*.p8w",
    "*.p8x",
    "*.p8y",
    "*.p8z",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["burnout"]
skip_glob = ["*.mojo"]

# mypy configuration
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
disallow_untyped_defs = false

[tool.pixi.workspace]
channels = ["https://conda.modular.com/max-nightly", "conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.pypi-dependencies]
burnout = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.tasks]
